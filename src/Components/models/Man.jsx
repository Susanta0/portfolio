/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Adobe substance 3D (https://sketchfab.com/substance3D)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/meet-mat-6d467069570e48c99a5fd5e6db53561b
Title: Meet MAT
*/
// 'use client'
// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei'
// import { useFrame } from '@react-three/fiber'

// export default function Man(props) {
//   const { nodes, materials } = useGLTF('/models/man-transformed.glb')
//   const modelRef= useRef()

//   useFrame((state, delta, xrFrame) => {
//     modelRef.current.position.y = -1.5 + Math.sin(state.clock.elapsedTime)*0.15
    
//   })
//   return (
//     <group {...props} dispose={null}
//     ref={modelRef}
//     position={[0,-1.5,1]}
//     scale={[1.25,1.25,.06]}
//     // rotation={[0.25, 0, 0]}
//     >
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Object_3.geometry}
//         material={materials['Scene_-_Root']}
//         position={[-0.718, 0, 0.829]}
//         rotation={[-Math.PI / 2, 0, 0]}
//         scale={0.174}
//       />
//     </group>
//   )
// }

// useGLTF.preload('/models/man-transformed.glb')
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: TheKnightDuck (https://sketchfab.com/lordfelps14)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/meet-mat2-astronaut-2768bcd97f464e30a6c79df2c3497786
Title: Meet Mat2 Astronaut
*/
'use client'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Map(props) {
  const { nodes, materials } = useGLTF('/models/matman2-transformed.glb')
  const modelRef= useRef()

  useFrame((state, delta, xrFrame) => {
    modelRef.current.position.y = -1.5 + Math.sin(state.clock.elapsedTime)*0.15
    
  })
  return (
    <group {...props} dispose={null}
    ref={modelRef}
    position={[0,-1.5,0]}
    // scale={[1.25,1.25,0.06]}
    scale={[2,2.1,0.76]}
    // rotation={[0.25, 0, 0]}
    
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_2.geometry}
        material={materials.Base1}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_3.geometry}
        material={materials.Body1}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials.Head1}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/models/matman2-transformed.glb')
